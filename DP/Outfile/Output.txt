  public class Singleton implements Serializable 	public static void main arg[] 		System out print hello  	 	private static final long serialVersionUID = -1093810940935189395L 	private static Singleton sc = new Singleton 	private Singleton 		ifsc!=null 			throw new IllegalStateException Already created   		 	 	public static Singleton getInstance 		return sc 	 	 	private Object readResolve throws ObjectStreamException 		return sc 	 	 	private Object writeReplace throws ObjectStreamException 		return sc 	 	 	public Object clone throws CloneNotSupportedException 		throw new CloneNotSupportedException Singleton, cannot be clonned  	 	 	private static Class getClass classname throws ClassNotFoundException  	    ClassLoader classLoader = Thread currentThread getContextClassLoader 	    ifclassLoader == null  	        classLoader = Singleton class getClassLoader 	    return classLoader loadClassclassname 	 	    public class SingletonEager  	private static SingletonEager sc = new SingletonEager 	private SingletonEager 	public static SingletonEager getInstance 		return sc 	    public class SingletoneEnum   	public enum SingleEnum 		SINGLETON_ENUM 	   public class SingletonLazy  	 	private static SingletonLazy sc = null 	private SingletonLazy 	public static SingletonLazy getInstance 		ifsc==null 			sc = new SingletonLazy 		 		return sc 	    public class SingletonLazyDoubleCheck   	private volatile static SingletonLazyDoubleCheck sc = null 	private SingletonLazyDoubleCheck 	public static SingletonLazyDoubleCheck getInstance 		ifsc==null 			synchronizedSingletonLazyDoubleCheck class 				ifsc==null 					sc = new SingletonLazyDoubleCheck 					 			 		 		return sc 	    public class SingletonLazyMultithreaded   	private static SingletonLazyMultithreaded sc = null 	private SingletonLazyMultithreaded 	public static synchronized SingletonLazyMultithreaded getInstance 		ifsc==null 			sc = new SingletonLazyMultithreaded 		 		return sc 	     public class Singleton implements Serializable 	public static void main 		 x= hello  	 	private static final long serialVersionUID = -1093810940935189395L 	private static Singleton sc = new Singleton 	private Singleton 		ifsc!=null 			throw new IllegalStateException Already created   		 	 	public static Singleton getInstance 		return sc 	 	 	private Object readResolve throws ObjectStreamException 		return sc 	 	 	private Object writeReplace throws ObjectStreamException 		return sc 	 	 	public Object clone throws CloneNotSupportedException 		throw new CloneNotSupportedException Singleton, cannot be clonned  	 	 	private static Class getClass classname throws ClassNotFoundException  	    ClassLoader classLoader = Thread currentThread getContextClassLoader 	    ifclassLoader == null  	        classLoader = Singleton class getClassLoader 	    return classLoader loadClassclassname 	 	   public class SingletonEager  	private static SingletonEager sc = new SingletonEager 	private SingletonEager 	public static SingletonEager getInstance 		return sc 	    public class SingletoneEnum   	public enum SingleEnum 		SINGLETON_ENUM 	   public class SingletonLazy  	 	private static SingletonLazy sc = null 	private SingletonLazy 	public static SingletonLazy getInstance 		ifsc==null 			sc = new SingletonLazy 		 		return sc 	    public class SingletonLazyDoubleCheck   	private volatile static SingletonLazyDoubleCheck sc = null 	private SingletonLazyDoubleCheck 	public static SingletonLazyDoubleCheck getInstance 		ifsc==null 			synchronizedSingletonLazyDoubleCheck class 				ifsc==null 					sc = new SingletonLazyDoubleCheck 					 			 		 		return sc 	    public class SingletonLazyMultithreaded   	private static SingletonLazyMultithreaded sc = null 	private SingletonLazyMultithreaded 	public static synchronized SingletonLazyMultithreaded getInstance 		ifsc==null 			sc = new SingletonLazyMultithreaded 		 		return sc 	   