package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Edit mode has been returned."  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Edit mode has been returned."  
			
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Edit mode has been returned."  
			
			return mode 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Edit mode has been returned."  
			
			return mode 
		 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Edit mode has been returned."  
			
			return mode 
		 
	 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class ArabicEdit implements EditMode  
	private ArabicEdit    
	public static EditMode mode 
	public static EditMode getArabicEdit  
	 
		if mode == null  
			mode = new ArabicEdit   
		System.out.println "Singleton Arabic Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Edit mode has been returned."  
			
			return mode 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 

package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 

	public ThesaurusActivate thesaurus    
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return ArabicThesaurus.getArabicThesaurus   
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return ArabicThesaurus.getArabicThesaurus   
	 
package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return ArabicThesaurus.getArabicThesaurus   
	 

package AbstractFactoryWithSingleton 

public class ArabicEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return ArabicEdit.getArabicEdit   
	 

	public FontSelect font    
		return ArabicFont.getArabicFont   
	 

	public SpellCheckerUtility spellChecker    
		return ArabicSpellChecker.getArabicSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return ArabicThesaurus.getArabicThesaurus   
	 

 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Arabic font mode has been returned."  
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Arabic font mode has been returned."  
			return font 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Arabic font mode has been returned."  
			return font 
		 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Arabic font mode has been returned."  
			return font 
		 
	 
package AbstractFactoryWithSingleton 

public class ArabicFont implements FontSelect  
	private ArabicFont    
	public static FontSelect font 
	public static FontSelect getArabicFont  
	 
		if font == null  
			font = new ArabicFont   
		System.out.println "Singleton Arabic Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Arabic font mode has been returned."  
			return font 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Arabic Edit mode."  
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Arabic Edit mode."  
		 
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Arabic Edit mode."  
		 
		return language 
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Arabic Edit mode."  
		 
		return language 
	 
package AbstractFactoryWithSingleton 

public class ArabicLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new ArabicEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Arabic Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Arabic Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Arabic SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Arabic Edit mode."  
		 
		return language 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Spell checker mode has been returned."  
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Spell checker mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Spell checker mode has been returned."  
			
			return spellCheck 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Spell checker mode has been returned."  
			
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Spell checker mode has been returned."  
			
			return spellCheck 
		 
	 
package AbstractFactoryWithSingleton 

public class ArabicSpellChecker implements SpellCheckerUtility  
	private ArabicSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getArabicSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new ArabicSpellChecker   
		System.out.println "Singleton Arabic SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Spell checker mode has been returned."  
			
			return spellCheck 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Thesaurus mode has been returned."  
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Thesaurus mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Thesaurus mode has been returned."  
			
			return thesaurus 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Thesaurus mode has been returned."  
			
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Thesaurus mode has been returned."  
			
			return thesaurus 
		 
	 
package AbstractFactoryWithSingleton 

public class ArabicThesaurus implements ThesaurusActivate  
	private ArabicThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getArabicThesaurus  
	 
		if thesaurus == null  
			thesaurus = new ArabicThesaurus   
		System.out.println "Singleton Arabic Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Arabic Thesaurus mode has been returned."  
			
			return thesaurus 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public interface EditConfigurations  
package AbstractFactoryWithSingleton 

public interface EditConfigurations  
	public EditMode edit   
package AbstractFactoryWithSingleton 

public interface EditConfigurations  
	public EditMode edit   
	public FontSelect font   
package AbstractFactoryWithSingleton 

public interface EditConfigurations  
	public EditMode edit   
	public FontSelect font   
	public SpellCheckerUtility spellChecker   
package AbstractFactoryWithSingleton 

public interface EditConfigurations  
	public EditMode edit   
	public FontSelect font   
	public SpellCheckerUtility spellChecker   
	public ThesaurusActivate thesaurus   
package AbstractFactoryWithSingleton 

public interface EditConfigurations  
	public EditMode edit   
	public FontSelect font   
	public SpellCheckerUtility spellChecker   
	public ThesaurusActivate thesaurus   
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public interface EditMode  
package AbstractFactoryWithSingleton 

public interface EditMode  

package AbstractFactoryWithSingleton 

public interface EditMode  

 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public abstract class EditorLanguages  
package AbstractFactoryWithSingleton 

public abstract class EditorLanguages  
	abstract Language editingEnvironment String feature  
package AbstractFactoryWithSingleton 

public abstract class EditorLanguages  
	abstract Language editingEnvironment String feature  
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton English Edit mode has been returned."  
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton English Edit mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton English Edit mode has been returned."  
			
			return mode 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton English Edit mode has been returned."  
			
			return mode 
		 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton English Edit mode has been returned."  
			
			return mode 
		 
	 
package AbstractFactoryWithSingleton 

public class EnglishEdit implements EditMode  
	private EnglishEdit    
	public static EditMode mode 
	public static EditMode getEnglishEdit  
	 
		if mode == null  
			mode = new EnglishEdit   
		System.out.println "Singleton English Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton English Edit mode has been returned."  
			
			return mode 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
	 
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
	 

package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
	 

	public ThesaurusActivate thesaurus    
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return EnglishThesaurus.getEnglishThesaurus   
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return EnglishThesaurus.getEnglishThesaurus   
	 
package AbstractFactoryWithSingleton 

public class EnglishEditConfigurations implements EditConfigurations 

	public EditMode edit    
		return EnglishEdit.getEnglishEdit   
	 

	public FontSelect font    
		return EnglishFont.getEnglishFont   
	 

	public SpellCheckerUtility spellChecker    
		return EnglishSpellChecker.getEnglishSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return EnglishThesaurus.getEnglishThesaurus   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton English font mode has been returned."  
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton English font mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton English font mode has been returned."  
			
			return font 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton English font mode has been returned."  
			
			return font 
		 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton English font mode has been returned."  
			
			return font 
		 
	 
package AbstractFactoryWithSingleton 

public class EnglishFont implements FontSelect  
	private EnglishFont    
	public static FontSelect font 
	public static FontSelect getEnglishFont  
	 
		if font == null  
			font = new EnglishFont   
		System.out.println "Singleton English Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton English font mode has been returned."  
			
			return font 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "English Edit mode."  
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "English Edit mode."  
		 
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "English Edit mode."  
		 
		return language 
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "English Edit mode."  
		 
		return language 
	 
package AbstractFactoryWithSingleton 

public class EnglishLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new EnglishEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "English Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "English Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "English SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "English Edit mode."  
		 
		return language 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton English Spell checker mode has been returned."  
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton English Spell checker mode has been returned."  
			return spellCheck 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton English Spell checker mode has been returned."  
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton English Spell checker mode has been returned."  
			return spellCheck 
		 
	 
package AbstractFactoryWithSingleton 

public class EnglishSpellChecker implements SpellCheckerUtility  
	private EnglishSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getEnglishSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new EnglishSpellChecker   
		System.out.println "Singleton English SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton English Spell checker mode has been returned."  
			return spellCheck 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton English Thesaurus mode has been returned."  
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton English Thesaurus mode has been returned."  
		
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton English Thesaurus mode has been returned."  
		
			return thesaurus 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton English Thesaurus mode has been returned."  
		
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton English Thesaurus mode has been returned."  
		
			return thesaurus 
		 
	 
package AbstractFactoryWithSingleton 

public class EnglishThesaurus implements ThesaurusActivate  
	private EnglishThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getEnglishThesaurus  
	 
		if thesaurus == null  
			thesaurus = new EnglishThesaurus   
		System.out.println "Singleton English Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton English Thesaurus mode has been returned."  
		
			return thesaurus 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public interface FontSelect  
package AbstractFactoryWithSingleton 

public interface FontSelect  

package AbstractFactoryWithSingleton 

public interface FontSelect  

 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Edit mode has been returned."  
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Edit mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Edit mode has been returned."  
			
			return mode 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Edit mode has been returned."  
			
			return mode 
		 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Edit mode has been returned."  
			
			return mode 
		 
	 
package AbstractFactoryWithSingleton 

public class JapaneseEdit implements EditMode  
	private JapaneseEdit    
	public static EditMode mode 
	public static EditMode getJapaneseEdit  
	 
		if mode == null  
			mode = new JapaneseEdit   
		System.out.println "Singleton Japanese Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Edit mode has been returned."  
			
			return mode 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
	 
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
	 

package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
	 

	public ThesaurusActivate thesaurus    
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return JapaneseThesaurus.getJapaneseThesaurus   
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return JapaneseThesaurus.getJapaneseThesaurus   
	 
package AbstractFactoryWithSingleton 

public class JapaneseEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return JapaneseEdit.getJapaneseEdit   
	 

	public FontSelect font    
		return JapaneseFont.getJapaneseFont   
	 

	public SpellCheckerUtility spellChecker    
		return JapaneseSpellChecker.getJapaneseSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return JapaneseThesaurus.getJapaneseThesaurus   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Japanese font mode has been returned."  
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Japanese font mode has been returned."  
			return font 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Japanese font mode has been returned."  
			return font 
		 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Japanese font mode has been returned."  
			return font 
		 
	 
package AbstractFactoryWithSingleton 

public class JapaneseFont implements FontSelect  
	private JapaneseFont    
	public static FontSelect font 
	public static FontSelect getJapaneseFont  
	 
		if font == null  
			font = new JapaneseFont   
		System.out.println "Singleton Japanese Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Japanese font mode has been returned."  
			return font 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Japanese Edit mode."  
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Japanese Edit mode."  
		 
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Japanese Edit mode."  
		 
		return language 
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Japanese Edit mode."  
		 
		return language 
	 
package AbstractFactoryWithSingleton 

public class JapaneseLanguage extends EditorLanguages 
	Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new JapaneseEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Japanese Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Japanese Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Japanese SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Japanese Edit mode."  
		 
		return language 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Spell checker mode has been returned."  
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Spell checker mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Spell checker mode has been returned."  
			
			return spellCheck 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Spell checker mode has been returned."  
			
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Spell checker mode has been returned."  
			
			return spellCheck 
		 
	 
package AbstractFactoryWithSingleton 

public class JapaneseSpellChecker implements SpellCheckerUtility  
	private JapaneseSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getJapaneseSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new JapaneseSpellChecker   
		System.out.println "Singleton Japanese SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Japanese Spell checker mode has been returned."  
			
			return spellCheck 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Japenese Thesaurus mode has been returned."  
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Japenese Thesaurus mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Japenese Thesaurus mode has been returned."  
			
			return thesaurus 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Japenese Thesaurus mode has been returned."  
			
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Japenese Thesaurus mode has been returned."  
			
			return thesaurus 
		 
	 
package AbstractFactoryWithSingleton 

public class JapaneseThesaurus implements ThesaurusActivate  
	private JapaneseThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getJapaneseThesaurus  
	 
		if thesaurus == null  
			thesaurus = new JapaneseThesaurus   
		System.out.println "Singleton Japanese Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Japenese Thesaurus mode has been returned."  
			
			return thesaurus 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public abstract class Language  
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
	public void setConfiguration String configuration   
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
	public void setConfiguration String configuration   
		this.configuration = configuration 
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
	public void setConfiguration String configuration   
		this.configuration = configuration 
		System.out.println "Setting " + this.configuration  
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
	public void setConfiguration String configuration   
		this.configuration = configuration 
		System.out.println "Setting " + this.configuration  
	 
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
	public void setConfiguration String configuration   
		this.configuration = configuration 
		System.out.println "Setting " + this.configuration  
	 
	
package AbstractFactoryWithSingleton 

public abstract class Language  
	String configuration 
	
	public void setConfiguration String configuration   
		this.configuration = configuration 
		System.out.println "Setting " + this.configuration  
	 
	
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
	
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
	
	void method  
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
	
	void method  
	 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
	
	void method  
	 
		factory.edit   
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
	
	void method  
	 
		factory.edit   
	 
package AbstractFactoryWithSingleton 

//This class is implementing the Arabic editor and is using singlteton pattern
public class LanguageEdit extends Language  
	EditConfigurations factory 
	public static LanguageEdit languageEdit 
	private LanguageEdit EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageEdit getLanguageEdit EditConfigurations factory  
		if languageEdit == null  
			languageEdit= new LanguageEdit factory  
			System.out.println "Instantiated Singleton Language Edit."  
			return languageEdit 
		 
		else 
			System.out.println "Already created Singleton Language Edit."  
		return languageEdit 
		 
		
	 
	
	void method  
	 
		factory.edit   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
	
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
	
	void method  
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
	
	void method  
	 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
	
	void method  
	 
		factory.font   
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
	
	void method  
	 
		factory.font   
	 
package AbstractFactoryWithSingleton 

public class LanguageFont extends Language  
	EditConfigurations factory 
	public static LanguageFont languagefont 
	private LanguageFont EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageFont getLanguageFont EditConfigurations factory  
		if languagefont == null  
			languagefont= new LanguageFont factory  
			System.out.println "Instantiated Singleton Language Font."  
			return languagefont 
		 
		else 
			System.out.println "Already created Singleton Language Font"  
		return languagefont 
		 
		
	 
	
	void method  
	 
		factory.font   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
	
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
	
	void method  
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
	
	void method  
	 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
	
	void method  
	 
		factory.spellChecker   
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
	
	void method  
	 
		factory.spellChecker   
	 
package AbstractFactoryWithSingleton 

public class LanguageSpellchecker extends Language  
	EditConfigurations factory 
	public static LanguageSpellchecker languageSpellchecker 
	private LanguageSpellchecker EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageSpellchecker getLanguageSpellchecker EditConfigurations factory  
		if languageSpellchecker == null  
			languageSpellchecker= new LanguageSpellchecker factory  
			System.out.println "Instantiated Singleton Language SpellChecker."  
			return languageSpellchecker 
		 
		else 
			System.out.println "Already created Singleton Language SpellChecker."  
		return languageSpellchecker 
		 
		
	 
	
	void method  
	 
		factory.spellChecker   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
	
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
	
	void method  
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
	
	void method  
	 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
	
	void method  
	 
		factory.thesaurus   
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
	
	void method  
	 
		factory.thesaurus   
	 
package AbstractFactoryWithSingleton 

public class LanguageThesaurus extends Language  
	EditConfigurations factory 
	public static LanguageThesaurus languageThesaurus 
	private LanguageThesaurus EditConfigurations factory   
		this.factory = factory 
		method   
		
	 
	
	public static LanguageThesaurus getLanguageThesaurus EditConfigurations factory  
		if languageThesaurus == null  
			languageThesaurus= new LanguageThesaurus factory  
			System.out.println "Instantiated Singleton Language Thesaurus."  
			return languageThesaurus 
		 
		else 
			System.out.println "Already created Singleton Language Thesaurus."  
		return languageThesaurus 
		 
		
	 
	
	void method  
	 
		factory.thesaurus   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public interface SpellCheckerUtility  
package AbstractFactoryWithSingleton 

public interface SpellCheckerUtility  

package AbstractFactoryWithSingleton 

public interface SpellCheckerUtility  

 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 


package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
		String className = "AbstractFactoryWithSingleton."+language+"Language" 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
		String className = "AbstractFactoryWithSingleton."+language+"Language" 
		Class theClass = Class.forName className  
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
		String className = "AbstractFactoryWithSingleton."+language+"Language" 
		Class theClass = Class.forName className  
		EditorLanguages lang =  EditorLanguages  theClass.newInstance   
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
		String className = "AbstractFactoryWithSingleton."+language+"Language" 
		Class theClass = Class.forName className  
		EditorLanguages lang =  EditorLanguages  theClass.newInstance   
		return lang 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
		String className = "AbstractFactoryWithSingleton."+language+"Language" 
		Class theClass = Class.forName className  
		EditorLanguages lang =  EditorLanguages  theClass.newInstance   
		return lang 
	 
package AbstractFactoryWithSingleton 


public class TestDrivenClassForAbstractFactoryWithSingleton  
	String fontLang 
	String editLang 
	String spellCheckerLang 
	String thesaurusLang 
	
	public static void main  String args[]  throws InterruptedException, ClassNotFoundException, InstantiationException, IllegalAccessException
	 
		
		EditorConfigFacadeForSingleton "Urdu","Urdu","Urdu","Urdu"  
	 
	
	public static void EditorConfigFacadeForSingleton String fontLang, String thesaurusLang, String editLang, String spellCheckerLang  throws ClassNotFoundException, InstantiationException, IllegalAccessException, InterruptedException 
		configureEditor fontLang, "font"  
		Thread.sleep 2000  
		configureEditor editLang, "edit"  
		Thread.sleep 2000  
		configureEditor spellCheckerLang, "spellchecker"  
		Thread.sleep 2000  
		configureEditor thesaurusLang, "thesaurus"  
		Thread.sleep 2000  
	 
	public void setFontLang String lang  
		this.fontLang = lang 
	 
	public void setEditLang String lang  
		this.editLang = lang 
	 
	public void setthesaurusLang String lang  
		this.thesaurusLang = lang 
	 
	public void setspellCheckerLang String lang  
		this.spellCheckerLang = lang 
	 
	
	public static void configureEditor String language, String configuration  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		EditorLanguages lang = setLanguage language  
		lang.editingEnvironment configuration  
	 
	
	private static EditorLanguages setLanguage String language  throws ClassNotFoundException, InstantiationException, IllegalAccessException  
		System.out.println "\nUser has selected " +language+ " language."  
		String className = "AbstractFactoryWithSingleton."+language+"Language" 
		Class theClass = Class.forName className  
		EditorLanguages lang =  EditorLanguages  theClass.newInstance   
		return lang 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public interface ThesaurusActivate  
package AbstractFactoryWithSingleton 

public interface ThesaurusActivate  

package AbstractFactoryWithSingleton 

public interface ThesaurusActivate  

 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Edit mode has been returned."  
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Edit mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Edit mode has been returned."  
			
			return mode 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Edit mode has been returned."  
			
			return mode 
		 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Edit mode has been returned."  
			
			return mode 
		 
	 
package AbstractFactoryWithSingleton 

public class UrduEdit implements EditMode  
	private UrduEdit    
	public static EditMode mode 
	public static EditMode getUrduEdit  
	 
		if mode == null  
			mode = new UrduEdit   
		System.out.println "Singleton Urdu Edit mode has been initialized."  
			return mode 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Edit mode has been returned."  
			
			return mode 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
	 
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
	 

package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
	 

	public ThesaurusActivate thesaurus    
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return UrduThesaurus.getUrduThesaurus   
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return UrduThesaurus.getUrduThesaurus   
	 
package AbstractFactoryWithSingleton 

public class UrduEditConfigurations implements EditConfigurations 
	public EditMode edit    
		return UrduEdit.getUrduEdit   
	 

	public FontSelect font    
		return UrduFont.getUrduFont   
	 

	public SpellCheckerUtility spellChecker    
		return UrduSpellChecker.getUrduSpellChecker   
	 

	public ThesaurusActivate thesaurus    
		return UrduThesaurus.getUrduThesaurus   
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Urdu font mode has been returned."  
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Urdu font mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Urdu font mode has been returned."  
			
			return font 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Urdu font mode has been returned."  
			
			return font 
		 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Urdu font mode has been returned."  
			
			return font 
		 
	 
package AbstractFactoryWithSingleton 

public class UrduFont implements FontSelect  
	private UrduFont    
	public static FontSelect font 
	public static FontSelect getUrduFont  
	 
		if font == null  
			font = new UrduFont   
		System.out.println "Singleton Urdu Font mode has been initialized."  
			return font 
		 
		else
		 
			System.out.println "Already created Singleton Urdu font mode has been returned."  
			
			return font 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Urdu Edit mode."  
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Urdu Edit mode."  
		 
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Urdu Edit mode."  
		 
		return language 
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Urdu Edit mode."  
		 
		return language 
	 
package AbstractFactoryWithSingleton 

public class UrduLanguage extends EditorLanguages 

	protected Language editingEnvironment String feature   
		Language language = null 
		EditConfigurations ingredientFactory = new UrduEditConfigurations   
		System.out.println "Fonts, thesaurus, spellcheck utility, edit mode are all reset."  
		if  feature.equals "font"    
			language = LanguageFont.getLanguageFont ingredientFactory  
			language.setConfiguration "Urdu Font."  
		  else if  feature.equals "thesaurus"    
			language = LanguageThesaurus.getLanguageThesaurus ingredientFactory  
			language.setConfiguration "Urdu Thesaurus."  
		  else if  feature.equals "spellchecker"    
			language = LanguageSpellchecker.getLanguageSpellchecker ingredientFactory  
			language.setConfiguration "Urdu SpellChecker Utility."  
		  else if  feature.equals "edit"    
			language = LanguageEdit.getLanguageEdit ingredientFactory  
			language.setConfiguration "Urdu Edit mode."  
		 
		return language 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Spell checker mode has been returned."  
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Spell checker mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Spell checker mode has been returned."  
			
			return spellCheck 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Spell checker mode has been returned."  
			
			return spellCheck 
		 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Spell checker mode has been returned."  
			
			return spellCheck 
		 
	 
package AbstractFactoryWithSingleton 

public class UrduSpellChecker implements SpellCheckerUtility  
	private UrduSpellChecker    
	public static SpellCheckerUtility spellCheck 
	public static SpellCheckerUtility getUrduSpellChecker  
	 
		if spellCheck == null  
			spellCheck = new UrduSpellChecker   
		System.out.println "Singleton Urdu SpellChecker mode has been initialized."  
			return spellCheck 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Spell checker mode has been returned."  
			
			return spellCheck 
		 
	 
 
package AbstractFactoryWithSingleton 
package AbstractFactoryWithSingleton 

package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Thesaurus mode has been returned."  
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Thesaurus mode has been returned."  
			
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Thesaurus mode has been returned."  
			
			return thesaurus 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Thesaurus mode has been returned."  
			
			return thesaurus 
		 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Thesaurus mode has been returned."  
			
			return thesaurus 
		 
	 
package AbstractFactoryWithSingleton 

public class UrduThesaurus implements ThesaurusActivate  
	private UrduThesaurus    
	public static ThesaurusActivate thesaurus 
	public static ThesaurusActivate getUrduThesaurus  
	 
		if thesaurus == null  
			thesaurus = new UrduThesaurus   
		System.out.println "Singleton Urdu Thesaurus mode has been initialized."  
			return thesaurus 
		 
		else
		 
			System.out.println "Already created Singleton Urdu Thesaurus mode has been returned."  
			
			return thesaurus 
		 
	 
 
